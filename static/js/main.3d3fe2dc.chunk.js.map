{"version":3,"sources":["assets/images/loading.gif","components/Dashboard/Header/HeaderStyles.js","components/TaskItem/TaskItemStyles.js","components/TaskItem/TaskItem.js","components/MockList/MockListStyles.js","components/MockList/MockList.js","components/MucSearch/MucSearchStyles.js","components/MucSearch/MucSearch.js","containers/TaskForm/TaskFormStyles.js","redux/actions/ModalAction.js","redux/constants/ActionTypes.js","redux/actions/TaskAction.js","components/ReduxForm/ReduxF.js","containers/TaskForm/Validate.js","redux/constants/ConfigConst.js","containers/TaskForm/TaskForm.js","containers/TaskBoard/TaskBoardStyles.js","containers/TaskBoard/TaskBoard.js","containers/QuanTriPage/QuanTriPage.js","redux/actions/AuthAction.js","containers/DangnhapPage/DangnhapPageStyles.js","containers/DangnhapPage/DangnhapPage.js","containers/DangkiPage/DangkiPageStyles.js","containers/DangkiPage/DangkiPage.js","containers/HomePage/HomePage.js","constants/CommonConstants.js","components/Dashboard/Header/Header.js","components/Dashboard/Sidebar/SidebarStyles.js","components/Dashboard/Sidebar/Sidebar.js","components/Dashboard/DashboardStyles.js","redux/actions/UIAction.js","components/Dashboard/Dashboard.js","commons/QuanTriLayoutRoute/QuanTriLayoutRoute.js","commons/Theme/ThemeCSS.js","commons/UserLayoutRoute/UserLayoutRoute.js","components/GlobalLoad/GlobalLoadStyles.js","components/GlobalLoad/GlobalLoad.js","components/ModalComp/ModalCompStyles.js","components/ModalComp/ModalComp.js","utils/AxiosService.js","apis/TaskAPI.js","sagas/TaskSaga.js","apis/TokenAPI.js","sagas/AuthSaga.js","sagas/RootSaga.js","utils/ToastHelper.js","redux/reducers/ReducerTask.js","redux/reducers/ReducerUI.js","redux/reducers/ReducerModal.js","redux/reducers/ReducerAuth.js","redux/reducers/Reducer.js","redux/StoreReducer.js","containers/App/AppStyles.js","containers/App/App.js","serviceWorker.js","index.js"],"names":["module","exports","headerStyles","theme","grow","flexGrow","menuButton","marginRight","spacing","title","display","breakpoints","up","search","position","borderRadius","shape","backgroundColor","fade","palette","common","white","marginLeft","width","searchIcon","height","pointerEvents","alignItems","justifyContent","inputRoot","color","inputInput","padding","transition","transitions","create","sectionDesktop","sectionMobile","taskItemStyles","card","marginTop","cardActions","TaskItem","this","props","classes","mock","hamOnEdit","hamOnDelete","Card","key","id","className","CardContent","Grid","container","justify","item","md","type","description","CardActions","Fab","aria-label","size","onClick","Icon","fontSize","Component","withStyles","mocklistStyles","MockList","taskLoc","status","xs","value","Box","mt","mb","label","map","mucSearchStyles","textField","MucSearch","hamHandleSearch","noValidate","autoComplete","TextField","onChange","margin","placeholder","InputProps","startAdornment","InputAdornment","taskFormStyles","hienModal","anModal","doiModalTitle","payload","doiModalND","component","resetListTask","params","fetchListOK","data","fetchListNG","err","themTask","themTaskOK","themTaskNG","searchTask","kw","editTask","arg_mock","suaTask","STATUS","suaTaskOK","suaTaskNG","xoaTask","arg_id","xoaTaskOK","xoaTaskNG","reduxFTextField","input","meta","touched","invalid","error","custom","helperText","reduxFRadio","rest","FormControl","RadioGroup","FormControlLabel","control","Radio","reduxFSelectField","children","InputLabel","htmlFor","Select","native","inputProps","name","FormHelperText","renderFromHelper","reduxFCheckbox","Checkbox","checked","validate","values","length","email","test","password","trim","confirmPassword","isChk","API_URL_GOC","API_CONGVIECS","TaskForm","hamSubmitForm","taskActionCreators","reduxprop_editTask","parseInt","hamRenderStatusSelect","xhtml","Field","modalActionCreators","handleSubmit","submitting","onSubmit","multiline","rowsMax","flexDirection","ml","mr","Button","variant","disabled","withReduxForm","reduxForm","form","compose","connect","state","reducerTask","initialValues","dispatch","bindActionCreators","taskAction","modalAction","tbStyles","TaskBoard","componentDidMount","hamHandleDelete","hienGrid","reduxprop_dsTask","filter","e","target","hamRenderMucSearch","hamDongForm","hamMoForm","taskBoard","style","dsTask","QuanTriPage","dangki","fullname","pw","dangkiOK","dangkiNG","dangnhap","dangnhapOK","msg","dangnhapNG","dnPageStyles","bckG","primary","main","textAlign","minHeight","DangnhapPage","authActionCreators","Typography","fullWidth","to","authAction","dkPageStyles","signup","maxWidth","DangkiPage","HomePage","STATUS_CODE","ADMIN_ROUTES","path","exact","USER_ROUTES","menuId","Header","anchorEl","hamProfileMenuOpen","setState","currentTarget","hamHandleMenuClose","hamHandleLogout","localStorage","removeItem","history","push","renderMenu","Menu","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","Boolean","onClose","MenuItem","hamToggleSidebar","showSB","AppBar","Toolbar","IconButton","edge","noWrap","Badge","badgeContent","aria-controls","aria-haspopup","withRouter","sidebarStyles","drawerPaper","zIndex","activeClassName","Sidebar","hamDongDrawer","hamRenderList","List","route","chiso","ListItem","button","Drawer","paper","dashboardStyles","wrapper","wrapperContent","easing","sharp","duration","leavingScreen","shiftLeft","easeOut","showGlobalLoad","hideGlobalLoad","hienSidebar","anSidebar","Dashboard","bool_val","uiActionCreators","reduxprop_showSB","cn","reducerUI","uiAction","QuanTriLayoutRoute","token","getItem","Comp","propsConLai","render","routeProps","themeCSS","createMuiTheme","mauSac","secondary","typography","fontFamily","hinhDang","textColor","UserLayoutRoute","globalLoadStyles","bckgLoad","left","right","top","bottom","background","icon","GlobalLoad","reduxprop_showGL","src","loadGIF","alt","showGL","modalCompStyles","xxx","modal","transform","header","cursor","ModalComp","reduxprop_open","reduxprop_title","reduxprop_component","Modal","reducerModal","inst","axios","interceptors","response","use","Promise","reject","instance","url","get","post","put","delete","getListAPI","queryPara","Object","keys","qs","stringify","AxiosService","themTaskAPI","suaTaskAPI","arg_task_id","xoaTaskAPI","hamSagaFetchList","hamSagaSearch","hamSagaThemTask","hamSagaSuaTask","hamSagaXoaTask","hamTaskSaga","take","action","call","res","statusCode","delay","select","fork","takeLatest","takeEvery","dangnhapAPI","arg_data","dangkiAPI","hamSagaDangnhap","hamSagaDangki","hamAuthSaga","timestamp","Date","toISOString","setItem","hamRootSaga","all","hienMsgError","message","toast","hienMsg","success","stateBanDau","concat","findIndex","newDs","slice","reducerAuth","myReducer","combineReducers","formReducer","router","connectRouter","sagaMW","createSagaMiddleware","composeEnhancers","createBrowserHistory","appStyles","khoiHop","store","mWares","thunk","routerMiddleware","enhancers","applyMiddleware","createStore","run","cauhinhStore","App","ThemeProvider","CssBaseline","hamRenderAdRoutes","hamRenderURoutes","window","location","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","console"],"mappings":"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","file":"static/js/main.3d3fe2dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/loading.73abf012.gif\";","import { fade } from \"@material-ui/core\"\r\n\r\nconst headerStyles = theme => ({\r\n    grow: {\r\n        flexGrow: 1,\r\n    },\r\n    menuButton: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    title: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('sm')]: {\r\n            display: 'block',\r\n        },\r\n    },\r\n    search: {\r\n        position: 'relative',\r\n        borderRadius: theme.shape.borderRadius,\r\n        backgroundColor: fade(theme.palette.common.white, 0.15),\r\n        '&:hover': {\r\n            backgroundColor: fade(theme.palette.common.white, 0.25),\r\n        },\r\n        marginRight: theme.spacing(2),\r\n        marginLeft: 0,\r\n        width: '100%',\r\n        [theme.breakpoints.up('sm')]: {\r\n            marginLeft: theme.spacing(3),\r\n            width: 'auto',\r\n        },\r\n    },\r\n    searchIcon: {\r\n        width: theme.spacing(7),\r\n        height: '100%',\r\n        position: 'absolute',\r\n        pointerEvents: 'none',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n    },\r\n    inputRoot: {\r\n        color: 'inherit',\r\n    },\r\n    inputInput: {\r\n        padding: theme.spacing(1, 1, 1, 7),\r\n        transition: theme.transitions.create('width'),\r\n        width: '100%',\r\n        [theme.breakpoints.up('md')]: {\r\n            width: 200,\r\n        },\r\n    },\r\n    sectionDesktop: {\r\n        display: 'none',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'flex',\r\n        },\r\n    },\r\n    sectionMobile: {\r\n        display: 'flex',\r\n        [theme.breakpoints.up('md')]: {\r\n            display: 'none',\r\n        },\r\n    },\r\n})\r\n\r\nexport default headerStyles","const taskItemStyles = () => ({\r\n    card: {\r\n        marginTop: 17,\r\n    },\r\n    cardActions: {\r\n        justifyContent: 'flex-end',\r\n    },\r\n})\r\n\r\nexport default taskItemStyles","import { Card, CardActions, CardContent, Fab, Grid, Icon, withStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport taskItemStyles from './TaskItemStyles'\n\nclass TaskItem extends Component {\n  render() {\n    const { classes, mock, hamOnEdit, hamOnDelete } = this.props\n    return (\n      <Card key={mock.id} className={classes.card}>\n        <CardContent>\n          <Grid container justify=\"space-between\">\n            <Grid item md={8}>\n              {/* Hiện title: \"Rửa chén\"... */}\n              <h2>{mock.title} </h2>\n            </Grid>\n            {/* Hiện type */}\n            <Grid item md={4}>{mock.type}</Grid>\n          </Grid>\n          {/* Hiện description */}\n          <p>{mock.description} </p>\n        </CardContent>\n        <CardActions className={classes.cardActions}>\n          <Fab color=\"primary\" aria-label=\"Edit\" size=\"small\"\n            onClick={hamOnEdit}\n          >\n            <Icon fontSize=\"small\">edit_icon</Icon>\n          </Fab>\n          <Fab color=\"primary\" aria-label=\"Delete\" size=\"small\"\n            onClick={hamOnDelete}\n          >\n            <Icon fontSize=\"small\">delete_icon</Icon>\n          </Fab>\n        </CardActions>\n      </Card>\n    )\n  }\n}\nTaskItem.propTypes = {\n  classes: PropTypes.object,\n  mock: PropTypes.object,\n  hamOnEdit: PropTypes.func,\n  hamOnDelete: PropTypes.func,\n}\n\nexport default withStyles(taskItemStyles)(TaskItem)","const mocklistStyles = () => ({\r\n})\r\n\r\nexport default mocklistStyles","import { Box, Grid, withStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport TaskItem from '../TaskItem/TaskItem'\nimport mocklistStyles from './MockListStyles'\n\nclass MockList extends Component {\n  render() {\n    const { taskLoc, status, hamOnEdit, hamOnDelete } = this.props\n    return (\n      <Grid item md={4} xs={12}\n        key={status.value} //trong Grid: CHƯA LÀM (0), ĐANG LÀM (1)...\n      >\n        <Box mt={3} mb={3}>\n          {/* Hiện header: \"SẴN SÀNG\", \"ĐANG LÀM\"... */}\n          <u><b><i>{status.label}</i></b></u>\n        </Box>\n        <div>\n          {\n            taskLoc.map(mock => {\n              return (\n                <TaskItem\n                  key={mock.id} // trong TaskItem: autoincrement id\n                  mock={mock}\n                  hamOnEdit={() => hamOnEdit(mock)}\n                  hamOnDelete={() => hamOnDelete(mock)}\n                ></TaskItem>\n              )\n            })\n          }\n        </div>\n      </Grid>\n    )\n  }\n}\nMockList.propTypes = {\n  taskLoc: PropTypes.array,\n  status: PropTypes.object,\n  hamOnEdit: PropTypes.func,\n  hamOnDelete: PropTypes.func,\n}\n\nexport default withStyles(mocklistStyles)(MockList)","const mucSearchStyles = () => ({\r\n    textField: {\r\n        width: '50ch',\r\n    }\r\n})\r\n\r\nexport default mucSearchStyles","import { TextField, withStyles, InputAdornment } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport mucSearchStyles from './MucSearchStyles'\nimport SearchIcon from '@material-ui/icons/Search'\n\nclass MucSearch extends Component {\n  render() {\n    const { hamHandleSearch, classes } = this.props\n    return (\n      <form noValidate autoComplete=\"off\">\n        <TextField className={classes.textField}\n          autoComplete=\"off\"\n          onChange={hamHandleSearch}\n          margin=\"normal\"\n          placeholder=\"Nhập KW search (phân biệt HOA & thường)...\"\n          InputProps={{\n            startAdornment: (\n              <InputAdornment position=\"start\">\n                <SearchIcon />\n              </InputAdornment>\n            ),\n          }}\n        />\n      </form>\n    )\n  }\n}\nMucSearch.propTypes = {\n  classes: PropTypes.object,\n  hamHandleSearch: PropTypes.func,\n}\n\nexport default withStyles(mucSearchStyles)(MucSearch)","const taskFormStyles = () => ({\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n})\r\n\r\nexport default taskFormStyles","import * as actTypes from '../constants/ActionTypes'\r\n\r\nexport const hienModal = () => {\r\n    return {\r\n        type: actTypes.HIEN_MODAL,\r\n    }\r\n}\r\nexport const anModal = () => {\r\n    return {\r\n        type: actTypes.AN_MODAL,\r\n    }\r\n}\r\nexport const doiModalTitle = title => {\r\n    return {\r\n        type: actTypes.DOI_MODAL_TITLE,\r\n        payload: { title, }\r\n    }\r\n}\r\nexport const doiModalND = component => {\r\n    return {\r\n        type: actTypes.DOI_MODAL_NOIDUNG,\r\n        payload: { component }\r\n    }\r\n}\r\n","// reducerTask\r\nexport var RESET_LIST_TASK = 'RESET_LIST_TASK'\r\nexport var FECTH_LIST_OK = 'FECTH_LIST_OK'\r\nexport var FETCH_LIST_NG = 'FETCH_LIST_NG'\r\nexport var SEARCH = 'SEARCH'\r\nexport var THEM_TASK = 'THEM_TASK'\r\nexport var THEM_TASK_OK = 'THEM_TASK_OK'\r\nexport var THEM_TASK_NG = 'THEM_TASK_NG'\r\nexport var EDIT_TASK = 'EDIT_TASK'\r\nexport var SUA_TASK = 'SUA_TASK'\r\nexport var SUA_TASK_OK = 'SUA_TASK_OK'\r\nexport var SUA_TASK_NG = 'SUA_TASK_NG'\r\nexport var XOA_TASK = 'XOA_TASK'\r\nexport var XOA_TASK_OK = 'XOA_TASK_OK'\r\nexport var XOA_TASK_NG = 'XOA_TASK_NG'\r\n\r\n// reducerUI\r\nexport var SHOW_GLOBAL_LOAD = 'SHOW_GLOBAL_LOAD'\r\nexport var HIDE_GLOBAL_LOAD = 'HIDE_GLOBAL_LOAD'\r\nexport var HIEN_SIDE_BAR = 'HIEN_SIDE_BAR'\r\nexport var AN_SIDE_BAR = 'AN_SIDE_BAR'\r\n\r\n// reducerModal\r\nexport var HIEN_MODAL = 'HIEN_MODAL'\r\nexport var AN_MODAL = 'AN_MODAL'\r\nexport var DOI_MODAL_TITLE = 'DOI_MODAL_TITLE'\r\nexport var DOI_MODAL_NOIDUNG = 'DOI_MODAL_NOIDUNG'\r\n\r\n// reducerAuth\r\nexport const DANGKI = 'DANGKI';\r\nexport const DANGKI_OK = 'DANGKI_OK';\r\nexport const DANGKI_NG = 'DANGKI_NG';\r\nexport const DANGNHAP = 'DANGNHAP';\r\nexport const DANGNHAP_OK = 'DANGNHAP_OK';\r\nexport const DANGNHAP_NG = 'DANGNHAP_NG';\r\n\r\n\r\n\r\n","import * as actTypes from '../constants/ActionTypes'\r\nimport { STATUS } from '../../constants/CommonConstants'\r\n\r\n// export const fetchListTaskREQ = () => {\r\n//     return dispatch => {\r\n//         dispatch(resetListTask())\r\n//         taskAPI\r\n//             .getList()\r\n//             .then(res => { dispatch(fetchListOK(res.data)) })\r\n//             .catch(err => { dispatch(fetchListNG(err)) })\r\n//     }\r\n// }\r\nexport const resetListTask = (params = {}) => {\r\n    return {\r\n        type: actTypes.RESET_LIST_TASK,\r\n        payload: { params, }\r\n    }\r\n}\r\nexport const fetchListOK = data => {\r\n    return {\r\n        type: actTypes.FECTH_LIST_OK,\r\n        payload: { data },\r\n    }\r\n}\r\nexport const fetchListNG = err => {\r\n    return {\r\n        type: actTypes.FETCH_LIST_NG,\r\n        payload: { err },\r\n    }\r\n}\r\nexport const themTask = (title, description, type) => {\r\n    return {\r\n        type: actTypes.THEM_TASK,\r\n        payload: { title, description, type },\r\n    }\r\n}\r\nexport const themTaskOK = data => {\r\n    return {\r\n        type: actTypes.THEM_TASK_OK,\r\n        payload: { data },\r\n    }\r\n}\r\nexport const themTaskNG = err => {\r\n    return {\r\n        type: actTypes.THEM_TASK_NG,\r\n        payload: { err },\r\n    }\r\n}\r\nexport const searchTask = kw => {\r\n    return {\r\n        type: actTypes.SEARCH,\r\n        payload: { kw, },\r\n    }\r\n}\r\nexport const editTask = arg_mock => {\r\n    return {\r\n        type: actTypes.EDIT_TASK,\r\n        payload: { arg_mock, },\r\n    }\r\n}\r\nexport const suaTask = (title, description, type, status = STATUS[0].value) => {\r\n    return {\r\n        type: actTypes.SUA_TASK,\r\n        payload: { title, description, type, status },\r\n    }\r\n}\r\nexport const suaTaskOK = data => {\r\n    return {\r\n        type: actTypes.SUA_TASK_OK,\r\n        payload: { data },\r\n    }\r\n}\r\nexport const suaTaskNG = err => {\r\n    return {\r\n        type: actTypes.SUA_TASK_NG,\r\n        payload: { err },\r\n    }\r\n}\r\nexport const xoaTask = arg_id => {\r\n    return {\r\n        type: actTypes.XOA_TASK,\r\n        payload: { arg_id },\r\n    }\r\n}\r\nexport const xoaTaskOK = arg_id => {\r\n    return {\r\n        type: actTypes.XOA_TASK_OK,\r\n        payload: { arg_id },\r\n    }\r\n}\r\nexport const xoaTaskNG = err => {\r\n    return {\r\n        type: actTypes.XOA_TASK_NG,\r\n        payload: { err },\r\n    }\r\n}\r\n\r\n","import React from 'react'\r\nimport { TextField, FormControl, RadioGroup, FormControlLabel, Radio, FormHelperText, InputLabel, Select, Checkbox } from '@material-ui/core'\r\nimport PropTypes from 'prop-types'\r\n\r\nexport const reduxFTextField = ({\r\n    label,\r\n    input,\r\n    meta: { touched, invalid, error },\r\n    ...custom\r\n}) => (\r\n        <TextField\r\n            label={label}\r\n            placeholder={label}\r\n            error={touched && invalid}\r\n            helperText={touched && error}\r\n            {...input}\r\n            {...custom}\r\n        />\r\n    )\r\nreduxFTextField.propTypes = {\r\n    label: PropTypes.string,\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object,\r\n}\r\n\r\nexport const reduxFRadio = ({ input, ...rest }) => (\r\n    <FormControl>\r\n        <RadioGroup {...input} {...rest}>\r\n            <FormControlLabel value=\"Việc nhà\" control={<Radio />} label=\"Việc nhà\" />\r\n            <FormControlLabel value=\"Công việc\" control={<Radio />} label=\"Công việc\" />\r\n        </RadioGroup>\r\n    </FormControl>\r\n)\r\nreduxFRadio.propTypes = {\r\n    input: PropTypes.object,\r\n}\r\n\r\nconst renderFromHelper = ({ touched, error }) => {\r\n    if (!(touched && error)) {\r\n        return\r\n    } else {\r\n        return <FormHelperText>{touched && error}</FormHelperText>\r\n    }\r\n}\r\n\r\nexport const reduxFSelectField = ({\r\n    input,\r\n    label,\r\n    meta: { touched, error },\r\n    children,\r\n    ...custom\r\n}) => (\r\n        <FormControl error={touched && error}>\r\n            <InputLabel htmlFor=\"color-native-simple\">{label}</InputLabel>\r\n            <Select\r\n                native\r\n                {...input}\r\n                {...custom}\r\n                inputProps={{\r\n                    name: input.name,\r\n                    id: 'color-native-simple'\r\n                }}\r\n                value={input.value}\r\n            >\r\n                {children}\r\n            </Select>\r\n            {renderFromHelper({ touched, error })}\r\n        </FormControl>\r\n    )\r\nreduxFSelectField.propTypes = {\r\n    label: PropTypes.string,\r\n    input: PropTypes.object,\r\n    meta: PropTypes.object,\r\n    children: PropTypes.array,\r\n}\r\n\r\nexport const reduxFCheckbox = ({ input, label }) => (\r\n    <div>\r\n        <FormControlLabel\r\n            control={<Checkbox checked={!!input.value} onChange={input.onChange} />}\r\n            label={label}\r\n        />\r\n    </div>\r\n)\r\nreduxFCheckbox.propTypes = {\r\n    label: PropTypes.string,\r\n    input: PropTypes.object,\r\n}\r\n","const validate = values => {\r\n    const err = {}\r\n    const { title } = values\r\n    if (!title) {\r\n        err.title = 'Required'\r\n    } else if (title.length < 2) {\r\n        err.title = 'Must be 2 characters or more'\r\n    }\r\n    if (!values.email) {\r\n        err.email = 'Email không được bỏ trống'\r\n    } else if (!/^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(values.email)) {\r\n        err.email = 'Email không hợp lệ'\r\n    }\r\n    if (!values.password) {\r\n        err.password = 'Mật khẩu không được bỏ trống'\r\n    } else if (values.password.trim().length < 5) {\r\n        err.password = 'Mật khẩu phải từ 5 ký tự trở lên'\r\n    }\r\n    if (!values.confirmPassword) {\r\n        err.confirmPassword = 'Mật khẩu không được bỏ trống'\r\n    } else if (values.confirmPassword.trim().length < 5) {\r\n        err.confirmPassword = 'Mật khẩu phải từ 5 ký tự trở lên'\r\n    } else if (values.confirmPassword !== values.password) {\r\n        err.confirmPassword = 'Mật khẩu không trùng khớp'\r\n    }\r\n    if (!values.isChk) {\r\n        err.isChk = 'Bắt buộc phải check'\r\n    }\r\n    return err\r\n}\r\n\r\nexport default validate","export const API_URL_GOC = 'https://5edc676811cb1d001665ce13.mockapi.io/dotq/'\r\nexport const API_CONGVIECS = API_URL_GOC + 'congviecs'\r\nexport const API_TOKENS = API_URL_GOC + 'tokens'\r\nexport const API_MEMBER_SIGNUP = API_URL_GOC + 'member_signup'\r\nexport const TASK_MANAGE = 'TASK_MANAGE'\r\nexport const LOGIN = 'LOGIN'\r\nexport const FORM_DANG_KI = 'FORM_DANG_KI'\r\n","import { Button, withStyles, Grid, Box } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport taskFormStyles from './TaskFormStyles'\nimport { connect } from 'react-redux'\nimport * as modalAction from '../../redux/actions/ModalAction'\nimport * as taskAction from '../../redux/actions/TaskAction'\nimport { compose, bindActionCreators } from 'redux'\nimport { reduxForm, Field } from 'redux-form'\nimport { reduxFSelectField, reduxFTextField, reduxFRadio } from '../../components/ReduxForm/ReduxF'\nimport validate from './Validate'\nimport { TASK_MANAGE } from '../../redux/constants/ConfigConst'\n\nclass TaskForm extends Component {\n  hamSubmitForm = data => {\n    const { taskActionCreators, reduxprop_editTask } = this.props\n    const { title, description, type, status } = data\n    const { themTask, suaTask } = taskActionCreators\n    if (reduxprop_editTask && reduxprop_editTask.id) {\n      suaTask(title, description, type, parseInt(status))\n    } else {\n      themTask(title, description, type)\n    }\n  }\n  hamRenderStatusSelect = () => {\n    let xhtml = null\n    const { reduxprop_editTask,\n    } = this.props\n    if (reduxprop_editTask && reduxprop_editTask.id) {\n      xhtml = (\n        <Field\n          label=\"Trạng thái\"\n          name=\"status\"\n          component={reduxFSelectField}\n        >\n          <option value={0}>CHƯA LÀM</option>\n          <option value={1}>ĐANG LÀM</option>\n          <option value={2}>ĐÃ XONG</option>\n        </Field>\n      )\n    }\n    return xhtml\n  }\n  // ***★★Validate in field, NOT in golbal\n  // required = value => (value || typeof value === 'number' ? undefined : 'Required')\n  // minLength = min => value =>\n  //   value && value.length < min ? `Must be ${min} characters or more` : undefined\n  // minLength2 = this.minLength(2)\n  render() {\n    const { classes, modalActionCreators, handleSubmit,\n      invalid, submitting,\n    } = this.props\n    const { anModal } = modalActionCreators\n    return (\n      // <Dialog open={moForm} onClose={onDong} aria-labelledby=\"form-dialog-title\">\n      //   <DialogTitle id=\"form-dialog-title\">Thêm mới</DialogTitle>\n      //   <DialogContent>\n      //     <TextField\n      //       id=\"standard-name\"\n      //       label=\"Name\"\n      //     />\n      //     <TextField\n      //       id=\"standard-multiline-flexible\"\n      //       label=\"Multiline\"\n      //       multiline\n      //       rowsMax=\"4\"\n      //     />\n      //   </DialogContent>\n      //   <DialogActions>\n      //     <Button onClick={onDong} color=\"primary\">\n      //       Cancel\n      //     </Button>\n      //     <Button onClick={onDong} color=\"primary\">\n      //       OK\n      //     </Button>\n      //   </DialogActions>\n      // </Dialog>\n      <form onSubmit={handleSubmit(this.hamSubmitForm)}>\n        <Grid container>\n          <Grid item md={12}>\n            <Field\n              label=\"Tiêu đề\"\n              className={classes.textField}\n              margin=\"normal\"\n              name=\"title\"\n              component={reduxFTextField}\n            // ***★★Validate in field, NOT in golbal\n            // validate={[this.required, this.minLength2]}\n            />\n          </Grid>\n          <Grid item md={12}>\n            <Field\n              label=\"Mô tả\"\n              multiline\n              rowsMax=\"4\"\n              className={classes.textField}\n              margin=\"normal\"\n              name=\"description\"\n              component={reduxFTextField}\n            />\n          </Grid>\n          <Grid item md={12}>\n            <Field\n              className={classes.textField}\n              margin=\"normal\"\n              name=\"type\"\n              component={reduxFRadio}\n            />\n          </Grid>\n          {this.hamRenderStatusSelect()}\n          <Grid item md={12}>\n            <Box display=\"flex\" flexDirection=\"row-reverse\" mt={2}>\n              <Box ml={1} mb={1} mr={1}>\n                <Button variant=\"contained\" onClick={anModal}>\n                  Hủy Bỏ\n                </Button>\n              </Box>\n              <Box>\n                <Button\n                  disabled={invalid || submitting}\n                  variant=\"contained\"\n                  color=\"primary\"\n                  type=\"submit\"\n                >\n                  Lưu Lại\n              </Button>\n              </Box>\n            </Box>\n          </Grid>\n        </Grid>\n      </form>\n    )\n  }\n}\n\nTaskForm.propTypes = {\n  classes: PropTypes.object,\n  taskActionCreators: PropTypes.shape({\n    themTask: PropTypes.func,\n    suaTask: PropTypes.func,\n  }),\n  modalActionCreators: PropTypes.shape({\n    anModal: PropTypes.func,\n  }),\n  handleSubmit: PropTypes.func,\n  invalid: PropTypes.bool,\n  submitting: PropTypes.bool,\n  reduxprop_editTask: PropTypes.object,\n}\nconst mapState2Props = state => {\n  const { editTask } = state.reducerTask\n  return {\n    reduxprop_editTask: editTask,\n    initialValues: {\n      title: editTask ? editTask.title : '',\n      description: editTask ? editTask.description : '',\n      type: editTask ? editTask.type : '',\n      status: editTask ? editTask.status : '',\n    }\n  }\n}\nconst mapDispatch2Props = dispatch => {\n  return {\n    taskActionCreators: bindActionCreators(taskAction, dispatch),\n    modalActionCreators: bindActionCreators(modalAction, dispatch),\n  }\n}\nconst withReduxForm = reduxForm({\n  form: TASK_MANAGE,\n  validate,\n})\n\nexport default compose(\n  withStyles(taskFormStyles),\n  connect(\n    mapState2Props,\n    mapDispatch2Props,\n  ),\n  withReduxForm,\n)(TaskForm)\n","const tbStyles = () => ({\r\n    // const tbStyles = xxx => ({\r\n    // hinhDang: {\r\n    //     padding: 20,\r\n    //     margin: 10,\r\n    //     backgroundColor: xxx.mauSac.primary,\r\n    //     borderRadius: xxx.hinhDang.borderRadius,\r\n    //     color: xxx.hinhDang.textColor\r\n    // }\r\n})\r\n\r\nexport default tbStyles","import { Grid, withStyles, Box } from '@material-ui/core'\nimport Button from '@material-ui/core/Button'\nimport AddCircle from '@material-ui/icons/AddCircle'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { bindActionCreators, compose } from 'redux'\nimport MockList from '../../components/MockList/MockList'\nimport MucSearch from '../../components/MucSearch/MucSearch'\nimport TaskForm from '../TaskForm/TaskForm'\nimport { STATUS } from '../../constants/CommonConstants'\nimport * as taskAction from '../../redux/actions/TaskAction'\nimport * as modalAction from '../../redux/actions/ModalAction'\nimport tbStyles from './TaskBoardStyles'\n\nclass TaskBoard extends Component {\n  // cách khai báo state rút gọn\n  // state = {\n  //   moForm: false,\n  // }\n  componentDidMount = () => {\n    const { taskActionCreators } = this.props\n    taskActionCreators.resetListTask()\n  }\n  hamOnEdit = arg_mock => {\n    const { taskActionCreators, modalActionCreators } = this.props\n    const { editTask } = taskActionCreators\n    editTask(arg_mock)\n    const { hienModal, doiModalTitle, doiModalND } = modalActionCreators\n    hienModal()\n    doiModalTitle('Chỉnh sửa task')\n    doiModalND(<TaskForm />)\n  }\n  hamHandleDelete = arg_mock => {\n    const { taskActionCreators } = this.props\n    taskActionCreators.xoaTask(arg_mock.id)\n  }\n  hamOnDelete = arg_mock => {\n    const { modalActionCreators } = this.props\n    const { hienModal, doiModalTitle, doiModalND, anModal } = modalActionCreators\n    hienModal()\n    doiModalTitle('Xóa task')\n    doiModalND(\n      <div>\n        <h3>\n          Bạn có chắc chắn muốn xóa task:{' '}\n          <i>{arg_mock.title}</i>?\n        </h3>\n        <Box display=\"flex\" flexDirection=\"row-reverse\" mt={2}>\n          <Box ml={1} mb={1} mr={1}>\n            <Button variant=\"contained\" onClick={anModal}>Hủy</Button>\n          </Box>\n          <Box>\n            <Button variant=\"contained\"\n              color=\"primary\"\n              onClick={() => this.hamHandleDelete(arg_mock)}\n            >Xóa</Button>\n          </Box>\n        </Box>\n      </div>\n    )\n  }\n  hienGrid = () => {\n    const { reduxprop_dsTask } = this.props\n    const xhtml = (\n      <Grid container\n        spacing={2}>\n        {\n          STATUS.map(status => {\n            const taskLoc = reduxprop_dsTask.filter(mock => mock.status === status.value)\n            return (\n              <MockList\n                key={status.value} //trong Grid: CHƯA LÀM (0), ĐANG LÀM (1)...\n                taskLoc={taskLoc}\n                status={status}\n                hamOnEdit={this.hamOnEdit}\n                hamOnDelete={this.hamOnDelete}\n              ></MockList>\n            )\n          })\n        }\n      </Grid>\n    )\n    return xhtml\n  }\n  hamHandleSearch = e => {\n    const { taskActionCreators } = this.props\n    taskActionCreators.searchTask(e.target.value)\n  }\n  hamRenderMucSearch = () => {\n    return <MucSearch hamHandleSearch={this.hamHandleSearch} />\n  }\n  hamDongForm = () => {\n    const { modalActionCreators } = this.props\n    modalActionCreators.anModal()\n  }\n  hamMoForm = () => {\n    const { modalActionCreators, taskActionCreators } = this.props\n    const { editTask } = taskActionCreators\n    editTask(null)\n    const { hienModal, doiModalTitle, doiModalND } = modalActionCreators\n    hienModal()\n    doiModalTitle('Thêm mới task')\n    doiModalND(<TaskForm />)\n  }\n  render() {\n    const { classes } = this.props\n    return (\n      <div className={classes.taskBoard}>\n        <Button variant=\"contained\"\n          color=\"primary\"\n          style={{ marginLeft: 20 }}\n          // trong onClick thì hàm KO cần ()\n          onClick={this.hamMoForm}>\n          <AddCircle /> Thêm mới\n        </Button>\n        {/* KO trong onClick thì hàm cần () */}\n        {this.hamRenderMucSearch()}\n        {this.hienGrid()}\n      </div>\n    )\n  }\n}\n\nTaskBoard.propTypes = {\n  classes: PropTypes.object,\n  taskActionCreators: PropTypes.shape({\n    resetListTask: PropTypes.func,\n    searchTask: PropTypes.func,\n    editTask: PropTypes.func,\n    xoaTask: PropTypes.func,\n  }),\n  modalActionCreators: PropTypes.shape({\n    hienModal: PropTypes.func,\n    anModal: PropTypes.func,\n    doiModalTitle: PropTypes.func,\n    doiModalND: PropTypes.func,\n  }),\n  reduxprop_dsTask: PropTypes.array,\n}\nconst mapState2Props = state => {\n  return {\n    reduxprop_dsTask: state.reducerTask.dsTask\n  }\n}\nconst mapDispatch2Props = dispatch => {\n  return {\n    taskActionCreators: bindActionCreators(taskAction, dispatch),\n    modalActionCreators: bindActionCreators(modalAction, dispatch),\n  }\n}\n\nexport default compose(\n  withStyles(tbStyles),\n  connect(\n    mapState2Props,\n    mapDispatch2Props,\n  )\n)(TaskBoard)","import React, { Component } from 'react'\r\n\r\nexport default class QuanTriPage extends Component {\r\n    render() {\r\n        return (\r\n            <h1>\r\n                Trang quản trị\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n","import * as actTypes from '../constants/ActionTypes'\r\n\r\nexport const dangki = (fullname, email, pw) => ({\r\n    type: actTypes.DANGKI,\r\n    payload: {\r\n        fullname, email, pw\r\n    }\r\n});\r\n\r\nexport const dangkiOK = data => ({\r\n    type: actTypes.DANGKI_OK,\r\n    payload: {\r\n        data\r\n    }\r\n});\r\n\r\nexport const dangkiNG = err => ({\r\n    type: actTypes.DANGKI_NG,\r\n    payload: {\r\n        err\r\n    }\r\n});\r\n\r\nexport const dangnhap = (email, pw) => ({\r\n    type: actTypes.DANGNHAP,\r\n    payload: {\r\n        email, pw\r\n    }\r\n});\r\n\r\nexport const dangnhapOK = (data, msg) => ({\r\n    type: actTypes.DANGNHAP_OK,\r\n    payload: {\r\n        data\r\n    },\r\n    msg: msg,\r\n});\r\n\r\nexport const dangnhapNG = err => ({\r\n    type: actTypes.DANGNHAP_NG,\r\n    payload: {\r\n        err\r\n    }\r\n});\r\n\r\n\r\n","const dnPageStyles = theme => ({\r\n    bckG: {\r\n        backgroundColor: theme.palette.primary.main,\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        minHeight: '100vh',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n})\r\n\r\nexport default dnPageStyles","import { Button, Card, CardContent, Typography, withStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { bindActionCreators, compose } from 'redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { reduxFTextField } from '../../components/ReduxForm/ReduxF'\nimport * as authAction from '../../redux/actions/AuthAction'\nimport { LOGIN } from '../../redux/constants/ConfigConst'\nimport validate from '../TaskForm/Validate'\nimport dnPageStyles from './DangnhapPageStyles'\n\nclass DangnhapPage extends Component {\n  hamSubmitForm = data => {\n    const { authActionCreators } = this.props\n    const { email, password } = data\n    const { dangnhap } = authActionCreators\n    if (dangnhap) {\n      dangnhap(email, password)\n    }\n  }\n  render() {\n    const { classes, invalid, submitting, handleSubmit, } = this.props\n    return (\n      <div className={classes.bckG}>\n        <div>\n          <Card>\n            <CardContent>\n              <form onSubmit={handleSubmit(this.hamSubmitForm)}>\n                <div>\n                  <Typography variant='caption'>Đăng nhập</Typography>\n                </div>\n                <Field label='Email'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"email\"\n                  component={reduxFTextField}\n                />\n                <Field label='Password' type='password'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"password\"\n                  component={reduxFTextField}\n                />\n                <Button\n                  disabled={invalid || submitting}\n                  variant='contained' color='primary' fullWidth type='submit' >\n                  Đăng nhập\n                </Button>\n                <div>\n                  <Link to='/signup' >\n                    <Button>Đăng kí tài khoản</Button>\n                  </Link>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n}\n\nDangnhapPage.propTypes = {\n  classes: PropTypes.object,\n  invalid: PropTypes.bool,\n  submitting: PropTypes.bool,\n  handleSubmit: PropTypes.func,\n  authActionCreators: PropTypes.shape({\n    dangnhap: PropTypes.func,\n  }),\n}\nconst withReduxForm = reduxForm({\n  form: LOGIN,\n  validate,\n})\nconst mapDispatchToProps = dispatch => ({\n  authActionCreators: bindActionCreators(authAction, dispatch)\n})\n\nexport default compose(\n  withStyles(dnPageStyles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withReduxForm,\n)(DangnhapPage) ","const dkPageStyles = () => ({\r\n    bckG: {\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        justifyContent: 'center',\r\n        textAlign: 'center',\r\n        minHeight: '100vh',\r\n    },\r\n    textField: {\r\n        width: '100%',\r\n    },\r\n    signup: {\r\n        maxWidth: 800,\r\n    },\r\n})\r\n\r\nexport default dkPageStyles","import {\n  Button, Card,\n  CardContent, Typography, withStyles\n} from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { Link } from 'react-router-dom'\nimport { bindActionCreators, compose } from 'redux'\nimport { Field, reduxForm } from 'redux-form'\nimport { reduxFCheckbox, reduxFTextField } from '../../components/ReduxForm/ReduxF'\nimport * as authAction from '../../redux/actions/AuthAction'\nimport { FORM_DANG_KI } from '../../redux/constants/ConfigConst'\nimport validate from '../TaskForm/Validate'\nimport dkPageStyles from './DangkiPageStyles'\n\nclass DangkiPage extends Component {\n  hamSubmitForm = data => {\n    const { authActionCreators } = this.props\n    const { fullname, email, password } = data\n    const { dangki } = authActionCreators\n    if (dangki) {\n      dangki(fullname, email, password)\n    }\n  }\n  render() {\n    const { classes, invalid, submitting, handleSubmit, } = this.props\n    return (\n      <div className={classes.bckG}>\n        <div className={classes.signup}>\n          <Card>\n            <CardContent>\n              <form onSubmit={handleSubmit(this.hamSubmitForm)}>\n                <div>\n                  <Typography variant='caption'>Đăng kí tài khoản</Typography>\n                </div>\n                <Field label='Họ & tên'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"fullname\"\n                  component={reduxFTextField}\n                />\n                <Field label='Email'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"email\"\n                  component={reduxFTextField}\n                />\n                <Field label='Password' type='password'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"password\"\n                  component={reduxFTextField}\n                />\n                <Field label='Confirm Password' type='password'\n                  fullWidth margin='normal' className={classes.textField}\n                  name=\"confirmPassword\"\n                  component={reduxFTextField}\n                />\n                <Field\n                  component={reduxFCheckbox}\n                  label='Tôi đã đọc chính sách & OK'\n                  name=\"isChk\"\n                />\n                <Button\n                  disabled={invalid || submitting}\n                  variant='contained' color='primary' fullWidth type='submit' >\n                  Đăng kí\n                </Button>\n                <div>\n                  <Link to='/' >\n                    <Button>Đăng nhập</Button>\n                  </Link>\n                </div>\n              </form>\n            </CardContent>\n          </Card>\n        </div>\n      </div>\n    )\n  }\n}\n\nDangkiPage.propTypes = {\n  classes: PropTypes.object,\n  invalid: PropTypes.bool,\n  submitting: PropTypes.bool,\n  handleSubmit: PropTypes.func,\n  authActionCreators: PropTypes.shape({\n    dangki: PropTypes.func,\n  }),\n}\nconst withReduxForm = reduxForm({\n  form: FORM_DANG_KI,\n  validate,\n})\nconst mapDispatchToProps = dispatch => ({\n  authActionCreators: bindActionCreators(authAction, dispatch)\n})\n\nexport default compose(\n  withStyles(dkPageStyles),\n  connect(\n    null,\n    mapDispatchToProps\n  ),\n  withReduxForm,\n)(DangkiPage) \n","import React, { Component } from 'react'\r\n\r\nexport default class HomePage extends Component {\r\n    render() {\r\n        return (\r\n            <h1>\r\n                Trang chủ\r\n            </h1>\r\n        )\r\n    }\r\n}\r\n","import TaskBoard from '../containers/TaskBoard/TaskBoard'\r\nimport QuanTriPage from '../containers/QuanTriPage/QuanTriPage'\r\nimport DangnhapPage from '../containers/DangnhapPage/DangnhapPage'\r\nimport DangkiPage from '../containers/DangkiPage/DangkiPage'\r\nimport HomePage from '../containers/HomePage/HomePage'\r\n\r\nexport const STATUS = [\r\n    {\r\n        value: 0,\r\n        label: 'CHƯA LÀM'\r\n    },\r\n    {\r\n        value: 1,\r\n        label: 'ĐANG LÀM'\r\n    },\r\n    {\r\n        value: 2,\r\n        label: 'ĐÃ XONG'\r\n    },\r\n]\r\nexport const STATUS_CODE = {\r\n    SUCCESS: 200,\r\n    CREATED: 201,\r\n}\r\nexport const TOKEN = 'TOKEN'\r\nexport const DELAY_MS = 1000\r\nexport const REDIRECT_AFTER_DANGKI = '/';\r\nexport const REDIRECT_AFTER_DANGNHAP_ADMIN = '/admin';\r\nexport const REDIRECT_AFTER_DANGNHAP_USER = '/home';\r\n\r\nexport const ADMIN_ROUTES = [\r\n    {\r\n        path: REDIRECT_AFTER_DANGNHAP_ADMIN,\r\n        name: 'Trang quản trị',\r\n        exact: true,\r\n        component: QuanTriPage,\r\n    },\r\n    {\r\n        path: '/admin/task-board',\r\n        name: 'Quản lí task',\r\n        component: TaskBoard,\r\n    },\r\n]\r\n\r\nexport const USER_ROUTES = [\r\n    {\r\n        path: REDIRECT_AFTER_DANGKI,\r\n        name: 'Đăng nhập',\r\n        exact: true,\r\n        component: DangnhapPage,\r\n    },\r\n    {\r\n        path: '/signup',\r\n        name: 'Đăng kí',\r\n        component: DangkiPage,\r\n    },\r\n    {\r\n        path: '/home',\r\n        name: 'Trang chủ',\r\n        component: HomePage,\r\n    },\r\n]\r\n\r\n","import AppBar from '@material-ui/core/AppBar'\r\nimport IconButton from '@material-ui/core/IconButton'\r\nimport Menu from '@material-ui/core/Menu'\r\nimport MenuItem from '@material-ui/core/MenuItem'\r\nimport Toolbar from '@material-ui/core/Toolbar'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport AccountCircle from '@material-ui/icons/AccountCircle'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport React, { Component } from 'react'\r\nimport { withStyles, Badge } from '@material-ui/core'\r\nimport headerStyles from './HeaderStyles'\r\nimport PropTypes from 'prop-types'\r\nimport MailIcon from '@material-ui/icons/Mail'\r\nimport NotificationsIcon from '@material-ui/icons/Notifications'\r\nimport { withRouter } from 'react-router-dom'\r\nimport { TOKEN } from '../../../constants/CommonConstants'\r\n\r\nconst menuId = 'primary-search-account-menu'\r\n\r\nclass Header extends Component {\r\n    state = {\r\n        anchorEl: null,\r\n    }\r\n    hamProfileMenuOpen = e => {\r\n        this.setState({\r\n            anchorEl: e.currentTarget,\r\n        })\r\n    }\r\n    hamHandleMenuClose = () => {\r\n        this.setState({\r\n            anchorEl: null,\r\n        })\r\n    }\r\n    hamHandleLogout = () => {\r\n        localStorage.removeItem(TOKEN)\r\n        const { history } = this.props\r\n        if (history) {\r\n            history.push('/')\r\n        }\r\n    }\r\n    renderMenu = () => {\r\n        const { anchorEl } = this.state\r\n        return (\r\n            <Menu\r\n                anchorEl={anchorEl}\r\n                anchorOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                id={menuId}\r\n                keepMounted\r\n                transformOrigin={{ vertical: 'top', horizontal: 'right' }}\r\n                open={Boolean(anchorEl)}\r\n                onClose={this.hamHandleMenuClose}\r\n            >\r\n                <MenuItem onClick={this.hamHandleLogout}>Logout</MenuItem>\r\n            </Menu>\r\n        )\r\n    }\r\n    hamToggleSidebar = () => {\r\n        const { showSB, hamToggleSidebar } = this.props\r\n        hamToggleSidebar(!showSB)\r\n    }\r\n\r\n    render() {\r\n        const { classes, name } = this.props\r\n        return (\r\n            <div className={classes.grow}>\r\n                <AppBar position=\"static\">\r\n                    <Toolbar>\r\n                        <IconButton\r\n                            edge=\"start\"\r\n                            className={classes.menuButton}\r\n                            color=\"inherit\"\r\n                            aria-label=\"Open drawer\"\r\n                            onClick={this.hamToggleSidebar}\r\n                        >\r\n                            <MenuIcon />\r\n                        </IconButton>\r\n                        <Typography className={classes.title} variant=\"h6\" noWrap>\r\n                            {name}\r\n                        </Typography>\r\n\r\n                        {/* <div className={classes.search}>\r\n                            <div className={classes.searchIcon}>\r\n                                <SearchIcon />\r\n                            </div>\r\n                            <InputBase\r\n                                placeholder=\"Search…\"\r\n                                classes={{\r\n                                    root: classes.inputRoot,\r\n                                    input: classes.inputInput,\r\n                                }}\r\n                                inputProps={{ 'aria-label': 'search' }}\r\n                            />\r\n                        </div> */}\r\n\r\n                        <div className={classes.grow} />\r\n                        <div className={classes.sectionDesktop}>\r\n                            <IconButton aria-label=\"show 4 new mails\" color=\"inherit\">\r\n                                <Badge badgeContent={4} color=\"secondary\">\r\n                                    <MailIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton aria-label=\"show 17 new notifications\" color=\"inherit\">\r\n                                <Badge badgeContent={17} color=\"secondary\">\r\n                                    <NotificationsIcon />\r\n                                </Badge>\r\n                            </IconButton>\r\n                            <IconButton\r\n                                edge=\"end\"\r\n                                aria-label=\"Account of current user\"\r\n                                aria-controls={menuId}\r\n                                aria-haspopup=\"true\"\r\n                                onClick={this.hamProfileMenuOpen}\r\n                                color=\"inherit\"\r\n                            >\r\n                                <AccountCircle />\r\n                            </IconButton>\r\n                        </div>\r\n                    </Toolbar>\r\n                </AppBar>\r\n                {this.renderMenu()}\r\n            </div>\r\n        )\r\n    }\r\n}\r\nHeader.propTypes = {\r\n    classes: PropTypes.object,\r\n    name: PropTypes.string,\r\n    showSB: PropTypes.bool,\r\n    hamToggleSidebar: PropTypes.func,\r\n    history: PropTypes.object,\r\n}\r\n\r\nexport default withStyles(headerStyles)(withRouter(Header))\r\n","const sidebarStyles = () => ({\r\n    drawerPaper: {\r\n        width: 240, // DashboardStyles.js: marginLeft: -240,\r\n        zIndex: 99,\r\n        height: '100%',\r\n        position: 'relative',\r\n    },\r\n    activeClassName: {\r\n        '&>div': {\r\n            backgroundColor: 'rgba(0,0,0,0.08)' // màu nền khi focus on NavLink\r\n        },\r\n    },\r\n})\r\n\r\nexport default sidebarStyles","import React, { Component } from 'react'\r\nimport { List, ListItem, Drawer, withStyles } from '@material-ui/core'\r\nimport { ADMIN_ROUTES } from '../../../constants/CommonConstants'\r\nimport sidebarStyles from './SidebarStyles'\r\nimport PropTypes from 'prop-types'\r\nimport { NavLink } from 'react-router-dom'\r\n\r\nclass Sidebar extends Component {\r\n    hamDongDrawer = () => {\r\n        const { hamToggleSidebar } = this.props\r\n        hamToggleSidebar(false)\r\n    }\r\n    hamRenderList = () => {\r\n        const { classes } = this.props\r\n        const xhtml = (\r\n            <div>\r\n                <List component=\"div\">\r\n                    {\r\n                        ADMIN_ROUTES.map((route, chiso) => {\r\n                            return (\r\n                                <NavLink key={chiso} to={route.path}\r\n                                    exact={route.exact} activeClassName={classes.activeClassName}\r\n                                >\r\n                                    <ListItem button>\r\n                                        {route.name}\r\n                                    </ListItem>\r\n                                </NavLink>\r\n                            )\r\n                        })\r\n                    }\r\n                </List>\r\n            </div>\r\n        )\r\n        return xhtml\r\n    }\r\n    render() {\r\n        const { showSB, classes } = this.props\r\n        return (\r\n            <Drawer open={showSB} onClose={this.hamDongDrawer}\r\n                classes={{ paper: classes.drawerPaper, }}\r\n                variant='persistent'\r\n            >\r\n                {this.hamRenderList()}\r\n            </Drawer>\r\n        )\r\n    }\r\n}\r\nSidebar.propTypes = {\r\n    classes: PropTypes.object,\r\n    showSB: PropTypes.bool,\r\n    hamToggleSidebar: PropTypes.func,\r\n}\r\n\r\nexport default withStyles(sidebarStyles)(Sidebar)\r\n","const dashboardStyles = theme => ({\r\n    wrapper: {\r\n        display: 'flex',\r\n        flexDirection: 'row',\r\n    },\r\n    wrapperContent: {\r\n        width: '100%',\r\n        padding: 10,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.sharp,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n    shiftLeft: {\r\n        marginLeft: -240, //SidebarStyles.js: width: 240,\r\n        transition: theme.transitions.create('margin', {\r\n            easing: theme.transitions.easing.easeOut,\r\n            duration: theme.transitions.duration.leavingScreen,\r\n        })\r\n    },\r\n})\r\n\r\nexport default dashboardStyles","import * as actTypes from '../constants/ActionTypes'\r\n\r\nexport const showGlobalLoad = () => {\r\n    return {\r\n        type: actTypes.SHOW_GLOBAL_LOAD,\r\n    }\r\n}\r\nexport const hideGlobalLoad = () => {\r\n    return {\r\n        type: actTypes.HIDE_GLOBAL_LOAD,\r\n    }\r\n}\r\nexport const hienSidebar = () => {\r\n    return {\r\n        type: actTypes.HIEN_SIDE_BAR,\r\n    }\r\n}\r\nexport const anSidebar = () => {\r\n    return {\r\n        type: actTypes.AN_SIDE_BAR,\r\n    }\r\n}","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types'\r\nimport Header from '../Dashboard/Header/Header'\r\nimport Sidebar from '../Dashboard/Sidebar/Sidebar'\r\nimport { withStyles } from '@material-ui/core'\r\nimport dashboardStyles from './DashboardStyles'\r\nimport { compose, bindActionCreators } from 'redux'\r\nimport { connect } from 'react-redux'\r\nimport * as uiAction from '../../redux/actions/UIAction'\r\nimport cn from 'classnames'\r\n\r\nclass Dashboard extends Component {\r\n    hamToggleSidebar = bool_val => {\r\n        const { uiActionCreators } = this.props\r\n        const { hienSidebar, anSidebar } = uiActionCreators\r\n        if (bool_val) {\r\n            hienSidebar()\r\n        } else {\r\n            anSidebar()\r\n        }\r\n    }\r\n    render() {\r\n        const { name, children, classes, reduxprop_showSB } = this.props\r\n        return (\r\n            <div>\r\n                <Header name={name} hamToggleSidebar={this.hamToggleSidebar}\r\n                    showSB={reduxprop_showSB} />\r\n                <div className={classes.wrapper}>\r\n                    <Sidebar hamToggleSidebar={this.hamToggleSidebar}\r\n                        showSB={reduxprop_showSB} />\r\n                    <div className={cn(classes.wrapperContent, {\r\n                        [classes.shiftLeft]: !reduxprop_showSB,\r\n                    })}> {children}</div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nDashboard.propTypes = {\r\n    classes: PropTypes.object,\r\n    children: PropTypes.object,\r\n    name: PropTypes.string,\r\n    reduxprop_showSB: PropTypes.bool,\r\n    uiActionCreators: PropTypes.shape({\r\n        hienSidebar: PropTypes.func,\r\n        anSidebar: PropTypes.func,\r\n    }),\r\n}\r\nconst mapState2Props = state => {\r\n    return {\r\n        reduxprop_showSB: state.reducerUI.showSB\r\n    }\r\n}\r\nconst mapDispatch2Props = dispatch => {\r\n    return {\r\n        uiActionCreators: bindActionCreators(uiAction, dispatch),\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    withStyles(dashboardStyles),\r\n    connect(\r\n        mapState2Props,\r\n        mapDispatch2Props,\r\n    )\r\n)(Dashboard)\r\n","import React, { Component } from 'react'\r\nimport { Route, Redirect } from 'react-router-dom'\r\nimport Dashboard from '../../components/Dashboard/Dashboard'\r\nimport PropTypes from 'prop-types'\r\nimport { TOKEN, REDIRECT_AFTER_DANGKI } from '../../constants/CommonConstants'\r\n\r\nclass QuanTriLayoutRoute extends Component {\r\n    render() {\r\n        const token = localStorage.getItem(TOKEN)\r\n        const { component: Comp, ...propsConLai } = this.props // routeProps: path, name, exact\r\n        return (\r\n            <Route\r\n                {...propsConLai}\r\n                render={routeProps => { // routeProps: history...\r\n                    return token ? (\r\n                        <Dashboard {...propsConLai}>\r\n                            <Comp {...routeProps} />\r\n                        </Dashboard>\r\n                    ) : (<Redirect to={REDIRECT_AFTER_DANGKI} />)\r\n                }}\r\n            ></Route>\r\n        )\r\n    }\r\n}\r\nQuanTriLayoutRoute.propTypes = {\r\n    component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n}\r\n\r\nexport default QuanTriLayoutRoute","import { createMuiTheme } from '@material-ui/core/styles'\r\n\r\nconst themeCSS = createMuiTheme({\r\n    mauSac: {\r\n        primary: \"#9c27b0\",\r\n        secondary: \"#f50057\",\r\n        error: \"#f44336\"\r\n    },\r\n    typography: {\r\n        fontFamily: \"Roboto\"\r\n    },\r\n    hinhDang: {\r\n        backgroundColor: \"red\",\r\n        textColor: \"yellow\",\r\n        borderRadius: 10\r\n    }\r\n})\r\n\r\nexport default themeCSS","import React, { Component } from 'react'\r\nimport { Route } from 'react-router-dom'\r\nimport PropTypes from 'prop-types'\r\n\r\nclass UserLayoutRoute extends Component {\r\n    render() {\r\n        const { component: Comp, ...propsConLai } = this.props // routeProps: path, name, exact\r\n        return (\r\n            <Route\r\n                {...propsConLai}\r\n                render={routeProps => { // routeProps: history...\r\n                    return <Comp {...routeProps} />\r\n                }}\r\n            ></Route>\r\n        )\r\n    }\r\n}\r\nUserLayoutRoute.propTypes = {\r\n    component: PropTypes.oneOfType([PropTypes.object, PropTypes.func]),\r\n}\r\n\r\nexport default UserLayoutRoute","const globalLoadStyles = () => ({\r\n    bckgLoad: {\r\n        position: 'fixed', //background full screen\r\n        left: 0,\r\n        right: 0,\r\n        top: 0,\r\n        bottom: 0,\r\n        zIndex: 99,\r\n        background: 'rgba(0,0,0,0.4)'\r\n    },\r\n    icon: {\r\n        position: 'fixed', //icon canh giữa screen\r\n        left: 0,\r\n        right: 0,\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        top: '30%',\r\n        width: 200,\r\n    },\r\n})\r\n\r\nexport default globalLoadStyles","import { withStyles } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport globalLoadStyles from './GlobalLoadStyles'\nimport loadGIF from '../../assets/images/loading.gif'\nimport { compose } from 'redux'\nimport { connect } from 'react-redux'\n\nclass GlobalLoad extends Component {\n  render() {\n    const { classes, reduxprop_showGL } = this.props\n    let xhtml = null\n    if (reduxprop_showGL) {\n      xhtml = (\n        <div className={classes.bckgLoad} >\n          <img src={loadGIF} alt=\"load\" className={classes.icon}></img>\n        </div>\n      )\n    }\n    return xhtml\n  }\n}\nGlobalLoad.propTypes = {\n  classes: PropTypes.object,\n  reduxprop_showGL: PropTypes.bool,\n}\nconst mapState2Props = state => {\n  return {\n    reduxprop_showGL: state.reducerUI.showGL\n  }\n}\n\nexport default compose(\n  withStyles(globalLoadStyles),\n  connect(\n    mapState2Props,\n    null,\n  )\n)(GlobalLoad)","const modalCompStyles = xxx => ({\r\n    modal: {\r\n        top: '50%',\r\n        left: '50%',\r\n        transform: 'translate(-50%,-50%)',\r\n        position: 'absolute',\r\n        width: 400,\r\n        backgroundColor: xxx.palette.background.paper\r\n    },\r\n    header: {\r\n        backgroundColor: 'red',\r\n        color: 'white',\r\n        display: 'flex',\r\n        justifyContent: 'space-between',\r\n    },\r\n    icon: {\r\n        cursor: 'pointer',\r\n        fontSize: 33,\r\n    }\r\n})\r\n\r\nexport default modalCompStyles","import { withStyles, Modal } from '@material-ui/core'\nimport PropTypes from 'prop-types'\nimport React, { Component } from 'react'\nimport modalCompStyles from './ModalCompStyles'\nimport Clear from '@material-ui/icons/Clear'\nimport { connect } from 'react-redux'\nimport * as modalAction from '../../redux/actions/ModalAction'\nimport { compose, bindActionCreators } from 'redux'\n\nclass ModalComp extends Component {\n  render() {\n    const { classes, reduxprop_open, reduxprop_title, reduxprop_component,\n      modalActionCreators } = this.props\n    const { anModal } = modalActionCreators\n    return (\n      <Modal open={reduxprop_open} onClose={anModal}>\n        <div className={classes.modal}>\n          <div className={classes.header}>\n            <h2>{reduxprop_title}</h2>\n            <Clear className={classes.icon} onClick={anModal} />\n          </div>\n          <div>{reduxprop_component}</div>\n        </div>\n      </Modal>\n    )\n  }\n}\n\nModalComp.propTypes = {\n  classes: PropTypes.object,\n  reduxprop_open: PropTypes.bool,\n  reduxprop_title: PropTypes.string,\n  reduxprop_component: PropTypes.object,\n  modalActionCreators: PropTypes.shape({\n    anModal: PropTypes.func,\n  }),\n}\nconst mapState2Props = state => {\n  return {\n    reduxprop_open: state.reducerModal.hienModal,\n    reduxprop_title: state.reducerModal.title,\n    reduxprop_component: state.reducerModal.component,\n  }\n}\nconst mapDispatch2Props = dispatch => {\n  return {\n    modalActionCreators: bindActionCreators(modalAction, dispatch),\n  }\n}\n\nexport default compose(\n  withStyles(modalCompStyles),\n  connect(\n    mapState2Props,\n    mapDispatch2Props,\n  )\n)(ModalComp)\n","import axios from 'axios'\r\n\r\nclass AxiosService {\r\n    constructor() {\r\n        const inst = axios.create()\r\n        inst.interceptors.response.use(function (response) {\r\n            return response\r\n        }, function (error) {\r\n            return Promise.reject(error)\r\n        })\r\n        this.instance = inst\r\n    }\r\n\r\n    get(url) { return this.instance.get(url) }\r\n    post(url, data) { return this.instance.post(url, data) }\r\n    put(url, data) { return this.instance.put(url, data) }\r\n    delete(url) { return this.instance.delete(url) }\r\n}\r\n\r\nexport default new AxiosService()","import AxiosService from \"../utils/AxiosService\"\r\nimport { API_CONGVIECS } from \"../redux/constants/ConfigConst\"\r\nimport qs from 'query-string'\r\n\r\nexport const getListAPI = (params = {}) => {\r\n    let queryPara = ''\r\n    if (Object.keys(params).length > 0) {\r\n        queryPara = `?${qs.stringify(params)}`\r\n    }\r\n    return AxiosService.get(`${API_CONGVIECS}${queryPara}`)\r\n}\r\n\r\nexport const themTaskAPI = data => {\r\n    return AxiosService.post(`${API_CONGVIECS}`, data)\r\n}\r\n\r\nexport const suaTaskAPI = (data, arg_task_id) => {\r\n    return AxiosService.put(`${API_CONGVIECS}/${arg_task_id}`, data)\r\n}\r\n\r\nexport const xoaTaskAPI = arg_task_id => {\r\n    return AxiosService.delete(`${API_CONGVIECS}/${arg_task_id}`)\r\n}","import { fork, take, call, put, delay, takeLatest, takeEvery, select } from 'redux-saga/effects'\r\nimport * as actTypes from '../redux/constants/ActionTypes'\r\nimport { getListAPI, themTaskAPI, suaTaskAPI, xoaTaskAPI } from '../apis/TaskAPI'\r\nimport { STATUS_CODE, DELAY_MS, STATUS } from '../constants/CommonConstants'\r\nimport {\r\n    resetListTask, fetchListOK, fetchListNG, themTaskOK, themTaskNG,\r\n    suaTaskOK, suaTaskNG, xoaTaskOK, xoaTaskNG\r\n} from '../redux/actions/TaskAction'\r\nimport { showGlobalLoad, hideGlobalLoad } from '../redux/actions/UIAction'\r\nimport { anModal } from '../redux/actions/ModalAction'\r\n\r\n/**\r\n * B1:\r\n * (1.1) TB.js > taskActionCreators.resetListTask() \r\n * OR (1.2) hamSagaSearch > resetListTask({ search: kw, })\r\n */\r\nfunction* hamSagaFetchList() {\r\n    while (true) { // nếu KO có thì chỉ run take(actTypes.RESET_LIST_TASK) only 1st time!!!\r\n        const action = yield take(actTypes.RESET_LIST_TASK) //B1.1: waiting for actTypes (blocking type)\r\n        // B2: gọi API getListAPI() from '../../apis/TaskAPI'\r\n        const { params } = action.payload\r\n        /**\r\n         * From (1.1) // truyền arg params={}\r\n         * From (1.2) // truyền arg params={ search: kw, }\r\n         */\r\n        const res = yield call(getListAPI, params)\r\n        /**\r\n        * call: giống JS's Promise, đợi xong sẽ trả về response/err\r\n        * call(funcAPIName, arg1,... argn)\r\n         */\r\n        yield put(showGlobalLoad()) //B2.1: hiển thị thanh loading... // put: non-blocking\r\n        const { status: statusCode, data } = res\r\n        if (statusCode === STATUS_CODE.SUCCESS) { //B3: kiểm tra status code\r\n            yield put(fetchListOK(data))\r\n        } else {\r\n            yield put(fetchListNG(data))\r\n        }\r\n        yield delay(DELAY_MS / 3)\r\n        yield put(hideGlobalLoad()) //B4: tắt thanh loading...\r\n    }\r\n}\r\nfunction* hamSagaSearch({ payload }) {\r\n    yield delay(DELAY_MS)\r\n    const { kw } = payload\r\n    yield put(resetListTask({ search: kw, }))\r\n}\r\nfunction* hamSagaThemTask({ payload }) {\r\n    const { title, description, type } = payload\r\n    yield put(showGlobalLoad())\r\n    const res = yield call(themTaskAPI, {\r\n        title,\r\n        description,\r\n        type,\r\n        status: STATUS[0].value,\r\n    })\r\n    const { status: statusCode, data } = res\r\n    if (statusCode === STATUS_CODE.CREATED) {\r\n        yield put(themTaskOK(data))\r\n        yield put(anModal())\r\n    } else {\r\n        yield put(themTaskNG(data))\r\n    }\r\n    yield delay(DELAY_MS / 3)\r\n    yield put(hideGlobalLoad())\r\n}\r\nfunction* hamSagaSuaTask({ payload }) {\r\n    const { title, description, type, status } = payload\r\n    //phải select, KO gán direct: editTask = state.reducerTask.editTask\r\n    const editTask = yield select(state => state.reducerTask.editTask)\r\n    yield put(showGlobalLoad())\r\n    const res = yield call(suaTaskAPI, {\r\n        title,\r\n        description,\r\n        type,\r\n        status,\r\n    }, editTask.id)\r\n    const { status: statusCode, data } = res\r\n    if (statusCode === STATUS_CODE.SUCCESS) {\r\n        yield put(suaTaskOK(data))\r\n        yield put(anModal())\r\n    } else {\r\n        yield put(suaTaskNG(data))\r\n    }\r\n    yield delay(DELAY_MS / 3)\r\n    yield put(hideGlobalLoad())\r\n}\r\nfunction* hamSagaXoaTask({ payload }) {\r\n    const { arg_id } = payload\r\n    yield put(showGlobalLoad())\r\n    const res = yield call(xoaTaskAPI, arg_id)\r\n    const { status: statusCode, data } = res\r\n    if (statusCode === STATUS_CODE.SUCCESS) {\r\n        yield put(xoaTaskOK(arg_id))\r\n        yield put(anModal())\r\n    } else {\r\n        yield put(xoaTaskNG(data))\r\n    }\r\n    yield delay(DELAY_MS / 3)\r\n    yield put(hideGlobalLoad())\r\n}\r\nfunction* hamTaskSaga() {\r\n    yield fork(hamSagaFetchList) //fork: chia 2 nhánh chạy song song async (non-blocking, còn lại hầu hết là blocking)\r\n    /**\r\n     * B5: run next action...\r\n     */\r\n    //hamSagaSearch & hamSagaThemTask có args nhưng KO truyền args khi call hàm\r\n    yield takeLatest(actTypes.SEARCH, hamSagaSearch)\r\n    yield takeEvery(actTypes.THEM_TASK, hamSagaThemTask) //takeEvery thì mỗi lần gõ 1 kí tự KW search sẽ filter ngay (KO phải chỉ the last như takeLatest)\r\n    yield takeEvery(actTypes.SUA_TASK, hamSagaSuaTask)\r\n    yield takeEvery(actTypes.XOA_TASK, hamSagaXoaTask)\r\n}\r\n\r\nexport default hamTaskSaga","import AxiosService from \"../utils/AxiosService\"\r\nimport { API_TOKENS, API_MEMBER_SIGNUP } from \"../redux/constants/ConfigConst\"\r\n\r\nexport const dangnhapAPI = arg_data => {\r\n    return AxiosService.post(`${API_TOKENS}`, arg_data)\r\n}\r\nexport const dangkiAPI = arg_data => {\r\n    return AxiosService.post(`${API_MEMBER_SIGNUP}`, arg_data)\r\n}","import { push } from 'connected-react-router'\r\nimport { call, put, takeLatest } from 'redux-saga/effects'\r\nimport { dangnhapAPI, dangkiAPI } from '../apis/TokenAPI'\r\nimport {\r\n    REDIRECT_AFTER_DANGNHAP_ADMIN, STATUS_CODE,\r\n    TOKEN, REDIRECT_AFTER_DANGNHAP_USER, REDIRECT_AFTER_DANGKI\r\n} from '../constants/CommonConstants'\r\nimport { dangnhapNG, dangnhapOK, dangkiOK, dangkiNG } from '../redux/actions/AuthAction'\r\nimport { hideGlobalLoad, showGlobalLoad } from '../redux/actions/UIAction'\r\nimport * as actTypes from '../redux/constants/ActionTypes'\r\n\r\nfunction* hamSagaDangnhap({ payload }) {\r\n    const { email, pw } = payload\r\n    const timestamp = (new Date()).toISOString()\r\n    // dangnhapAPI() là hàm giả lập cho async call API INS INTO tokens\r\n    const res = yield call(dangnhapAPI, {\r\n        email, pw, timestamp\r\n    })\r\n    yield put(showGlobalLoad())\r\n    const { status: statusCode, data } = res\r\n    if (statusCode === STATUS_CODE.CREATED) {\r\n        if (\r\n            email === 'admin@gmail.com' && pw === 'admin'\r\n        ) {\r\n            yield put(dangnhapOK(data, 'admin'))\r\n            localStorage.setItem(TOKEN, timestamp)\r\n            yield put(push(REDIRECT_AFTER_DANGNHAP_ADMIN))\r\n        } else {\r\n            yield put(dangnhapOK(data, 'user'))\r\n            yield put(push(REDIRECT_AFTER_DANGNHAP_USER))\r\n        }\r\n    } else {\r\n        yield put(dangnhapNG(data))\r\n    }\r\n    yield put(hideGlobalLoad())\r\n}\r\nfunction* hamSagaDangki({ payload }) {\r\n    const { fullname, email, pw } = payload\r\n    const res = yield call(dangkiAPI, {\r\n        fullname, email, pw\r\n    })\r\n    yield put(showGlobalLoad())\r\n    const { status: statusCode, data } = res\r\n    if (statusCode === STATUS_CODE.CREATED) {\r\n        yield put(dangkiOK(data))\r\n        yield put(push(REDIRECT_AFTER_DANGKI))\r\n    } else {\r\n        yield put(dangkiNG(data))\r\n    }\r\n    yield put(hideGlobalLoad())\r\n}\r\nfunction* hamAuthSaga() {\r\n    yield takeLatest(actTypes.DANGNHAP, hamSagaDangnhap)\r\n    yield takeLatest(actTypes.DANGKI, hamSagaDangki)\r\n}\r\n\r\nexport default hamAuthSaga","import { fork, all } from 'redux-saga/effects'\r\nimport hamTaskSaga from './TaskSaga';\r\nimport hamAuthSaga from './AuthSaga';\r\nfunction* hamRootSaga() {\r\n    yield all([yield fork(hamTaskSaga), yield fork(hamAuthSaga)]);\r\n}\r\n\r\nexport default hamRootSaga","import { toast } from \"react-toastify\"\r\n\r\nexport const hienMsgError = err => {\r\n    let message = null\r\n    if (typeof err === 'object' && err.message) {\r\n        ({ message } = err)\r\n    }\r\n    if (message !== null && message !== '' && typeof message !== 'undefined') {\r\n        toast.error(message)\r\n    }\r\n}\r\n\r\nexport const hienMsg = msg => {\r\n    if (msg !== null && msg !== '' && typeof msg !== 'undefined') {\r\n        toast.success(msg)\r\n    }\r\n}","import * as actTypes from '../constants/ActionTypes'\r\nimport { hienMsgError, hienMsg } from '../../utils/ToastHelper'\r\n\r\nconst stateBanDau = {\r\n    dsTask: [],\r\n    editTask: null,\r\n}\r\n\r\nconst reducerTask = (state = stateBanDau, action) => {\r\n    const { payload } = action\r\n    switch (action.type) {\r\n        case actTypes.RESET_LIST_TASK:\r\n            return {\r\n                dsTask: [],\r\n            }\r\n        case actTypes.FECTH_LIST_OK:\r\n            return {\r\n                dsTask: payload.data,\r\n            }\r\n        case actTypes.THEM_TASK_OK:\r\n            hienMsg('Đã thêm task OK.')\r\n            return {\r\n                dsTask: [payload.data].concat(state.dsTask), // newest sẽ hiện vị trí 1st\r\n            }\r\n        case actTypes.SUA_TASK_OK:\r\n            const { dsTask } = state\r\n            const { data } = payload\r\n            const chiso = dsTask.findIndex(item => item.id === data.id)\r\n            let newDs = []\r\n            if (chiso !== -1) {\r\n                newDs = [\r\n                    ...dsTask.slice(0, chiso),\r\n                    data,\r\n                    ...dsTask.slice(chiso + 1),\r\n                ]\r\n            }\r\n            hienMsg('Đã sửa task OK.')\r\n            return {\r\n                dsTask: newDs\r\n            }\r\n        case actTypes.XOA_TASK_OK:\r\n            hienMsg('Đã xóa task OK.')\r\n            return {\r\n                dsTask: state.dsTask.filter(item => item.id !== payload.arg_id)\r\n            }\r\n        case actTypes.XOA_TASK_NG:\r\n        case actTypes.THEM_TASK_NG:\r\n        case actTypes.SUA_TASK_NG:\r\n        case actTypes.FETCH_LIST_NG:\r\n            hienMsgError(payload.err)\r\n            return {\r\n                ...state,\r\n            }\r\n        case actTypes.EDIT_TASK:\r\n            return {\r\n                ...state, // bắt buộc phải có!\r\n                editTask: payload.arg_mock\r\n            }\r\n        default:\r\n            return {\r\n                ...state,\r\n            }\r\n    }\r\n}\r\n\r\nexport default reducerTask","import * as actTypes from '../constants/ActionTypes'\r\n\r\nconst stateBanDau = {\r\n    showGL: false,\r\n    showSB: true,\r\n}\r\n\r\nconst reducerUI = (state = stateBanDau, action) => {\r\n    switch (action.type) {\r\n        case actTypes.SHOW_GLOBAL_LOAD:\r\n            return {\r\n                ...state,\r\n                showGL: true,\r\n            }\r\n        case actTypes.HIDE_GLOBAL_LOAD:\r\n            return {\r\n                ...state,\r\n                showGL: false,\r\n            }\r\n        case actTypes.HIEN_SIDE_BAR:\r\n            return {\r\n                ...state,\r\n                showSB: true,\r\n            }\r\n        case actTypes.AN_SIDE_BAR:\r\n            return {\r\n                ...state,\r\n                showSB: false,\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default reducerUI","import * as actTypes from '../constants/ActionTypes'\r\n\r\nconst stateBanDau = {\r\n    hienModal: false,\r\n    title: '',\r\n    component: null,\r\n}\r\n\r\nconst reducerModal = (state = stateBanDau, action) => {\r\n    switch (action.type) {\r\n        case actTypes.HIEN_MODAL:\r\n            return {\r\n                ...state,\r\n                hienModal: true,\r\n            }\r\n        case actTypes.AN_MODAL:\r\n            return {\r\n                hienModal: false,\r\n                title: '',\r\n                component: null,\r\n            }\r\n        case actTypes.DOI_MODAL_TITLE:\r\n            const { title } = action.payload\r\n            return {\r\n                ...state,\r\n                title,\r\n            }\r\n        case actTypes.DOI_MODAL_NOIDUNG:\r\n            const { component } = action.payload\r\n            return {\r\n                ...state,\r\n                component,\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default reducerModal","import * as actTypes from '../constants/ActionTypes'\r\nimport { hienMsg, hienMsgError } from '../../utils/ToastHelper'\r\n\r\nconst reducerAuth = (state = {}, action) => {\r\n    switch (action.type) {\r\n        case actTypes.DANGKI_OK:\r\n            hienMsg('Đăng ký thành công')\r\n            return {\r\n                ...state,\r\n            }\r\n        case actTypes.DANGKI_NG:\r\n        case actTypes.DANGNHAP_NG:\r\n            hienMsgError(action.payload.err)\r\n            return {\r\n                ...state,\r\n            }\r\n        case actTypes.DANGNHAP_OK:\r\n            hienMsg('Đăng nhập ' + action.msg + ' thành công')\r\n            return {\r\n                ...state,\r\n            }\r\n        default:\r\n            return { ...state }\r\n    }\r\n}\r\n\r\nexport default reducerAuth","import { combineReducers } from 'redux'\r\nimport reducerTask from './ReducerTask'\r\nimport reducerUI from './ReducerUI'\r\nimport reducerModal from './ReducerModal'\r\nimport reducerAuth from './ReducerAuth'\r\nimport { reducer as formReducer } from 'redux-form'\r\nimport { connectRouter } from 'connected-react-router'\r\n\r\nconst myReducer = history =>\r\n    combineReducers({\r\n        reducerTask, reducerUI,\r\n        reducerModal, reducerAuth,\r\n        form: formReducer, router: connectRouter(history),\r\n    })\r\n\r\nexport default myReducer\r\n","import { routerMiddleware } from 'connected-react-router'\r\nimport { createBrowserHistory } from 'history'\r\nimport { applyMiddleware, compose, createStore } from 'redux'\r\nimport createSagaMiddleware from 'redux-saga'\r\nimport thunk from 'redux-thunk'\r\nimport hamRootSaga from '../sagas/RootSaga'\r\nimport myReducer from './reducers/Reducer'\r\n\r\nconst sagaMW = createSagaMiddleware()\r\nconst composeEnhancers = process.env.NODE_ENV !== 'production' && typeof window === 'object' &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ ? window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__({\r\n        shouldHotReload: false,\r\n    }) : compose\r\n\r\nexport const history = createBrowserHistory()\r\n\r\nconst cauhinhStore = () => {\r\n    const mWares = [thunk, sagaMW, routerMiddleware(history)]\r\n    const enhancers = [applyMiddleware(...mWares)]\r\n    const store = createStore(\r\n        myReducer(history),\r\n        composeEnhancers(...enhancers)\r\n    )\r\n    sagaMW.run(hamRootSaga)\r\n    return store\r\n}\r\n\r\nexport default cauhinhStore","const appStyles = () => ({\r\n    khoiHop: {\r\n        display: \"flex\",\r\n        alignItems: \"center\"\r\n    },\r\n    hinhDang: {\r\n        padding: 20,\r\n        margin: 10,\r\n        backgroundColor: \"red\"\r\n    }\r\n})\r\n\r\nexport default appStyles","import { CssBaseline, ThemeProvider, withStyles } from '@material-ui/core'\nimport { ConnectedRouter } from 'connected-react-router'\nimport React, { Component } from 'react'\nimport { Provider } from 'react-redux'\nimport { Switch } from 'react-router-dom'\nimport { ToastContainer } from 'react-toastify'\nimport 'react-toastify/dist/ReactToastify.css' //set with ToastContainer\nimport QuanTriLayoutRoute from '../../commons/QuanTriLayoutRoute/QuanTriLayoutRoute'\nimport themeCSS from '../../commons/Theme/ThemeCSS'\nimport UserLayoutRoute from '../../commons/UserLayoutRoute/UserLayoutRoute'\nimport GlobalLoad from '../../components/GlobalLoad/GlobalLoad'\nimport ModalComp from '../../components/ModalComp/ModalComp'\nimport { ADMIN_ROUTES, USER_ROUTES } from '../../constants/CommonConstants'\nimport cauhinhStore, { history } from '../../redux/StoreReducer'\nimport appStyles from './AppStyles'\n\nconst store = cauhinhStore()\nclass App extends Component {\n  hamRenderAdRoutes() {\n    let xhtml = null\n    if (ADMIN_ROUTES) {\n      xhtml = ADMIN_ROUTES.map((route, chiso) => {\n        return <QuanTriLayoutRoute key={chiso}\n          // phải truyền từng cái, KO được truyền 1 cục route\n          path={route.path}\n          component={route.component}\n          exact={route.exact}\n          name={route.name}\n        />\n      })\n    }\n    return xhtml\n  }\n  hamRenderURoutes() {\n    let xhtml = null\n    if (USER_ROUTES) {\n      xhtml = USER_ROUTES.map((route, chiso) => {\n        return <UserLayoutRoute key={chiso}\n          // phải truyền từng cái, KO được truyền 1 cục route\n          path={route.path}\n          component={route.component}\n          exact={route.exact}\n          name={route.name}\n        />\n      })\n    }\n    return xhtml\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <ConnectedRouter history={history}>\n          <ThemeProvider theme={themeCSS}>\n            <CssBaseline />\n            <ToastContainer />\n            <Switch>\n              {this.hamRenderAdRoutes()}\n              {this.hamRenderURoutes()}\n            </Switch>\n            <GlobalLoad />\n            <ModalComp />\n          </ThemeProvider>\n        </ConnectedRouter>\n      </Provider>\n    )\n  }\n}\n\nexport default withStyles(appStyles)(App)","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './containers/App/App'\nimport * as serviceWorker from './serviceWorker'\n\nReactDOM.render(\n  <App />\n  , document.getElementById('root')\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}